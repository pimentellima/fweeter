{"ast":null,"code":"import axios from \"axios\";\nimport moment from \"moment\";\nexport const getUserPostsById = async id => {\n  try {\n    const res = await axios.get(`//localhost:5000/posts/${id}`);\n    const posts = res.data.map(post => ({\n      ...post,\n      ingredients: JSON.parse(post.ingredients),\n      date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n    }));\n    return posts;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getPostsById = async id => {\n  try {\n    const res = await axios.get('//localhost:5000/posts/', {\n      params: {\n        id\n      }\n    });\n    const posts = res.data.map(post => ({\n      ...post,\n      ingredients: JSON.parse(post.ingredients),\n      date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n    }));\n    return posts;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const createPost = async postObj => {\n  try {\n    await axios.post('//localhost:5000/posts', postObj);\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\nexport const uploadPostImg = async file => {\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await axios.post('//localhost:5000/upload/post', formData);\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deletePost = async id => {\n  try {\n    await axios.delete('//localhost:5000/posts', {\n      data: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["axios","moment","getUserPostsById","id","res","get","posts","data","map","post","ingredients","JSON","parse","date","format","err","console","log","getPostsById","params","createPost","postObj","uploadPostImg","file","formData","FormData","append","error","deletePost","delete"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/services/posts.js"],"sourcesContent":["import axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nexport const getUserPostsById = async(id) => {\r\n    try {\r\n        const res = await axios.get(`//localhost:5000/posts/${id}`);\r\n        const posts = res.data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }))\r\n        return posts;\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const getPostsById = async(id) => {\r\n    try {\r\n        const res = await axios.get('//localhost:5000/posts/', {\r\n            params: {\r\n                id\r\n            }\r\n        });\r\n        const posts = res.data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }))\r\n        return posts;\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const createPost = async(postObj) => {\r\n    try {\r\n        await axios.post('//localhost:5000/posts', postObj);\r\n    } catch (err) {\r\n        console.log(err);\r\n    };\r\n}\r\n\r\nexport const uploadPostImg = async(file) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        const res = await axios.post('//localhost:5000/upload/post', formData);\r\n        return res.data;\r\n    } catch(err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nexport const deletePost = async(id) => {\r\n    try {\r\n        await axios.delete('//localhost:5000/posts', {\r\n            data: {id}\r\n        })\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAO,MAAMC,gBAAgB,GAAG,MAAMC,EAAE,IAAK;EACzC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,0BAAyBF,EAAG,EAAC,CAAC;IAC3D,MAAMG,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;MAChC,GAAGA,IAAI;MACPC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACC,WAAW,CAAC;MACzCG,IAAI,EAAEZ,MAAM,CAACQ,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;IACxD,CAAC,CAAC,CAAC;IACH,OAAOR,KAAK;EAChB,CAAC,CAAC,OAAMS,GAAG,EAAE;IACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAMf,EAAE,IAAK;EACrC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,yBAAyB,EAAE;MACnDc,MAAM,EAAE;QACJhB;MACJ;IACJ,CAAC,CAAC;IACF,MAAMG,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;MAChC,GAAGA,IAAI;MACPC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACC,WAAW,CAAC;MACzCG,IAAI,EAAEZ,MAAM,CAACQ,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;IACxD,CAAC,CAAC,CAAC;IACH,OAAOR,KAAK;EAChB,CAAC,CAAC,OAAMS,GAAG,EAAE;IACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAMC,OAAO,IAAK;EACxC,IAAI;IACA,MAAMrB,KAAK,CAACS,IAAI,CAAC,wBAAwB,EAAEY,OAAO,CAAC;EACvD,CAAC,CAAC,OAAON,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;EAAC;AACL,CAAC;AAED,OAAO,MAAMO,aAAa,GAAG,MAAMC,IAAI,IAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,MAAMnB,GAAG,GAAG,MAAMJ,KAAK,CAACS,IAAI,CAAC,8BAA8B,EAAEe,QAAQ,CAAC;IACtE,OAAOpB,GAAG,CAACG,IAAI;EACnB,CAAC,CAAC,OAAMQ,GAAG,EAAE;IACTC,OAAO,CAACW,KAAK,CAACZ,GAAG,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMa,UAAU,GAAG,MAAMzB,EAAE,IAAK;EACnC,IAAI;IACA,MAAMH,KAAK,CAAC6B,MAAM,CAAC,wBAAwB,EAAE;MACzCtB,IAAI,EAAE;QAACJ;MAAE;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAMY,GAAG,EAAE;IACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}