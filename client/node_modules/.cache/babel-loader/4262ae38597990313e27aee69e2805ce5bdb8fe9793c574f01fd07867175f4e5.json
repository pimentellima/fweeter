{"ast":null,"code":"import axios from \"axios\";\nimport moment from \"moment\";\nexport const uploadImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await axios.post('//localhost:5000/upload/post', formData);\n  return res.data;\n};\nexport const createPost = async (data, user_id) => {\n  const {\n    title,\n    description,\n    ingredients,\n    file\n  } = data;\n  const fileUrl = file[0] ? await uploadImg(file[0]) : '';\n  const postObj = {\n    user_id,\n    title,\n    description,\n    ingredients: JSON.stringify(ingredients),\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n    file: fileUrl\n  };\n  return await axios.post('//localhost:5000/posts', postObj);\n};\nexport const deletePost = async id => {\n  return await axios.delete('//localhost:5000/posts', {\n    data: {\n      id\n    }\n  });\n};\nexport const getUserPostsById = async id => {\n  const res = await axios.get(`//localhost:5000/posts/${id}`);\n  return res.data;\n};\nexport const getPostsById = async id => {\n  try {\n    const res = await axios.get('//localhost:5000/posts/', {\n      params: {\n        id\n      }\n    });\n    const posts = res.data.map(post => ({\n      ...post,\n      ingredients: JSON.parse(post.ingredients),\n      date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n    }));\n    return posts;\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["axios","moment","uploadImg","file","formData","FormData","append","res","post","data","createPost","user_id","title","description","ingredients","fileUrl","postObj","JSON","stringify","date","format","deletePost","id","delete","getUserPostsById","get","getPostsById","params","posts","map","parse","err","console","log"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/services/postsService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nexport const uploadImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await axios.post('//localhost:5000/upload/post', formData);\r\n    return res.data;\r\n}\r\n\r\nexport const createPost = async (data, user_id) => {\r\n    const { title, description, ingredients, file } = data;\r\n    const fileUrl = file[0] ? await uploadImg(file[0]) : '';\r\n    const postObj = {\r\n        user_id,\r\n        title,\r\n        description,\r\n        ingredients: JSON.stringify(ingredients),\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        file: fileUrl\r\n    }\r\n    return await axios.post('//localhost:5000/posts', postObj);\r\n}\r\n\r\n\r\n\r\nexport const deletePost = async id => {\r\n    return await axios.delete('//localhost:5000/posts', {\r\n            data: { id }\r\n        })\r\n}\r\n\r\nexport const getUserPostsById = async(id) => {\r\n    const res = await axios.get(`//localhost:5000/posts/${id}`);\r\n    return res.data;\r\n}\r\n\r\nexport const getPostsById = async(id) => {\r\n    try {\r\n        const res = await axios.get('//localhost:5000/posts/', {\r\n            params: {\r\n                id\r\n            }\r\n        });\r\n        const posts = res.data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }))\r\n        return posts;\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAO,MAAMC,SAAS,GAAG,MAAOC,IAAI,IAAK;EACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,MAAMI,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,CAAC;EACtE,OAAOG,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,OAAOD,IAAI,EAAEE,OAAO,KAAK;EAC/C,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,WAAW;IAAEX;EAAK,CAAC,GAAGM,IAAI;EACtD,MAAMM,OAAO,GAAGZ,IAAI,CAAC,CAAC,CAAC,GAAG,MAAMD,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EACvD,MAAMa,OAAO,GAAG;IACZL,OAAO;IACPC,KAAK;IACLC,WAAW;IACXC,WAAW,EAAEG,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC;IACxCK,IAAI,EAAElB,MAAM,EAAE,CAACmB,MAAM,CAAC,qBAAqB,CAAC;IAC5CjB,IAAI,EAAEY;EACV,CAAC;EACD,OAAO,MAAMf,KAAK,CAACQ,IAAI,CAAC,wBAAwB,EAAEQ,OAAO,CAAC;AAC9D,CAAC;AAID,OAAO,MAAMK,UAAU,GAAG,MAAMC,EAAE,IAAI;EAClC,OAAO,MAAMtB,KAAK,CAACuB,MAAM,CAAC,wBAAwB,EAAE;IAC5Cd,IAAI,EAAE;MAAEa;IAAG;EACf,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAMF,EAAE,IAAK;EACzC,MAAMf,GAAG,GAAG,MAAMP,KAAK,CAACyB,GAAG,CAAE,0BAAyBH,EAAG,EAAC,CAAC;EAC3D,OAAOf,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAMiB,YAAY,GAAG,MAAMJ,EAAE,IAAK;EACrC,IAAI;IACA,MAAMf,GAAG,GAAG,MAAMP,KAAK,CAACyB,GAAG,CAAC,yBAAyB,EAAE;MACnDE,MAAM,EAAE;QACJL;MACJ;IACJ,CAAC,CAAC;IACF,MAAMM,KAAK,GAAGrB,GAAG,CAACE,IAAI,CAACoB,GAAG,CAACrB,IAAI,KAAK;MAChC,GAAGA,IAAI;MACPM,WAAW,EAAEG,IAAI,CAACa,KAAK,CAACtB,IAAI,CAACM,WAAW,CAAC;MACzCK,IAAI,EAAElB,MAAM,CAACO,IAAI,CAACW,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;IACxD,CAAC,CAAC,CAAC;IACH,OAAOQ,KAAK;EAChB,CAAC,CAAC,OAAMG,GAAG,EAAE;IACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}